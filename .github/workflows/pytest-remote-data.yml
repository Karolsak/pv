name: pytest-remote-data

on:
  # use pull_request_target, in combination with the `remote-data` label (below)
  # so that we can access repository secrets.
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  pull_request_target:
    types: [labeled]

jobs:
  test:
    env:
      # we need to turn "3.6" into 36 to build the conda requirement filename,
      # but there's no good way to do that via string manipulation.  So set up
      # a map that will be parsed as JSON later:
      VERSIONMAP: '{"3.6": "36", "3.7": "37", "3.8": "38", "3.9": "39"}'

    strategy:
      fail-fast: false  # don't cancel other matrix jobs when one fails
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        suffix: ['']  # placeholder as an alternative to "-min"
        include:
          - python-version: 3.6
            suffix: -min

    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'remote-data')

    steps:
      - uses: actions/checkout@v2
        # pull_request_target runs in the context of the target branch (pvlib/master), not the
        # PR head, so specify the PR head explicitly:
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test_env
          environment-file: ${{ env.REQUIREMENTS }}
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
        env:
          # build requirement filename.  First replacement is for the python
          # version, mapping from "3.7" to "37", second is to add "-min" if needed
          REQUIREMENTS: ci/requirements-py${{ fromJSON(env.VERSIONMAP)[matrix.python-version] }}${{ matrix.suffix }}.yml

      - name: Run tests
        shell: bash -l {0}  # necessary for conda env to be active
        env:
          # copy GitHub Secrets into environment variables for the tests to access
          NREL_API_KEY: ${{ secrets.NRELAPIKEY }}
          BSRN_FTP_USERNAME: ${{ secrets.BSRN_FTP_USERNAME }}
          BSRN_FTP_PASSWORD: ${{ secrets.BSRN_FTP_PASSWORD }}
        run: pytest pvlib --cov=./ --cov-report=xml --remote-data

      # - name: Upload coverage to Codecov
      #   if: matrix.os == 'ubuntu-latest' && matrix.environment-type == 'conda'
      #   uses: codecov/codecov-action@v2
      #   with:
      #     directory: ./coverage/reports/
      #     fail_ci_if_error: true
      #     verbose: true
