.. _whatsnew_0600:

v0.6.0 (___, 2018)
---------------------

API Changes
~~~~~~~~~~~
* pvsystem.calcparams_desoto now requires arguments for each module model parameter.
* removed irradiance parameter from ModelChain.run_model and ModelChain.prepare_inputs


Enhancements
~~~~~~~~~~~~
* Add sea surface albedo in ``irradiance.py`` (:issue:`458`)
* Implement :meth:`~pvlib.modelchain.ModelChain.first_solar_spectral_loss`
  in ``modelchain.py`` (:issue:`359`)
* Clarify arguments ``Egref`` and ``dEgdT`` for
  :func:`~pvlib.pvsystem.calcparams_desoto` (:issue:`462`)
* Implement a reliable "gold" implementation of the single diode model (SDM)
  using a bisection method (Brent, 1973) bounded by points known to include the
  full forward-bias 1st quadrant IV-curve. Also implement a "fast" method using
  the Newton-Raphson method that is not bounded, but should be safe for well
  behaved IV-curves. (:issue:`408`)
* Implement :func:`~pvlib.pvsystem.bishop88` for explicit calculation of
  arbitrary IV curve points using diode voltage instead of cell voltage. This
  method is called for ``ivcurve_pnts`` in :func:`~pvlib.pvsystem.singlediode`
  if the method is either ``'newton'`` or ``'brentq'``, but the IV curve points
  will be log spaced instead of linear.
* Implement :func:`~pvlib.pvsystem.estimate_voc` to estimate open circuit
  voltage by assuming :math:`R_{sh} \to \infty` and :math:`R_s=0` as an upper
  bound in bisection method for :func:`~pvlib.pvsystem.singlediode`.
* Combine existing :func:`~pvlib.pvsystem.singlediode` method using Lambert-W
  with the two new implementations to form a wrapper, that takes an additional
  ``method`` argument ``('lambertw', 'newton', 'brentq')`` that defaults to a
  Lambert-W solution. Selecting either "brentq" or "newton" as the method uses
  ``bishop88`` with the corresponding search method. (:issue:`410`)
* Add :func:`~pvlib.pvsystem.mpp` method to compute the max power point using
  the new "brentq" bounded bisection method.
* Add new module ``pvlib.singlediode_methods`` which contains low-level
  functions to support implementing ``bishop88`` and various other methods like
  ``bishop88_i_from_v``, ``bishop88_v_from_i``, and ``bishop88_mpp``. *Note*:
  :func:`pvlib.singlediode_methods.bishop88` and
  :func:`pvlib.singlediode_methods.estimate_voc` are also imported into the
  ``pvlib.pvsystem`` module.


Bug fixes
~~~~~~~~~
* Unset executable bits of irradiance.py and test_irradiance.py (:issue:`460`)
* Fix failing tests due to column order on Python 3.6+ and Pandas 0.23+
  (:issue:`464`)
* ModelChain.prepare_inputs failed to pass solar_position and airmass to
  Location.get_clearsky. Fixed. (:issue:`481`)
* Add User-Agent specification to TMY3 remote requests to avoid rejection.
  (:issue:`493`)


Documentation
~~~~~~~~~~~~~
* Expand testing section with guidelines for functions, PVSystem/Location
  objects, and ModelChain.
* Updated several incorrect statements in ModelChain documentation regarding
  implementation status and default values. (:issue:`480`)


Testing
~~~~~~~
* Add pytest-mock dependency
* Use pytest-mock to ensure that PVSystem methods call corresponding functions
  correctly. Removes implicit dependence on precise return values of functions
* Use pytest-mock to ensure that ModelChain DC model is set up correctly.


Contributors
~~~~~~~~~~~~
* Will Holmgren
* Yu Cao
* Cliff Hansen
* Mark Mikofski
* Alan Mathew

